#!/bin/bash

# Check if a file or directory has been provided as an argument
if [ $# -lt 1 ]; then
  echo "Usage: $(basename $0) FILE"
  exit 1
fi

# Define the extract function
extract() {
  # Set the file path
  arg="$1"

  # Change to the directory containing the file
  cd "$(dirname "$arg")" || exit

  # Extract the file based on its extension
  case "$arg" in
    # Tar archives with bzip2 compression
    *.tar.bz2)
      tar xjf "$arg" --one-top-level
      local code=$?
      ;;
    # Tar archives with gzip compression
    *.tar.gz)
      tar xzf "$arg" --one-top-level
      local code=$?
      ;;
    # Bzip2 compressed files
    *.bz2)
      bunzip2 "$arg"
      local code=$?
      ;;
    # Gzip compressed files
    *.gz)
      gunzip "$arg"
      local code=$?
      ;;
    # Tar archives
    *.tar)
      tar xf "$arg" --one-top-level
      local code=$?
      ;;
    # Tar archives with bzip2 compression and a different file extension
    *.tbz2)
      (tar xjf "$arg" --one-top-level)
      local code=$?
      ;;
    # Tar archives with gzip compression and a different file extension
    *.tgz)
      tar xzf "$arg" --one-top-level
      local code=$?
      ;;
    # Tar archives with xz compression
    *.tar.xz)
      a_dir=$(expr "$arg" : '\(.*\).tar.xz')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # Zip archives
    *.zip)
      a_dir=$(expr "$arg" : '\(.*\).zip')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # 7-Zip archives
    *.7z)
      a_dir=$(expr "$arg" : '\(.*\).7z')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # Compressed files with the Unix compress utility
    *.Z)
      uncompress "$arg"
      local code=$?
      ;;
    # RAR archives
    *.rar)
      a_dir=$(expr "$arg" : '\(.*\).rar')
      mkdir "$a_dir"
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # ISO images
    *.iso)
      a_dir=$(expr "$arg" : '\(.*\).iso')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # WIM images
    *.wim)
      a_dir=$(expr "$arg" : '\(.*\).wim')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # CAB archives
    *.cab)
      a_dir=$(expr "$arg" : '\(.*\).cab')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # APM archives
    *.apm)
      a_dir=$(expr "$arg" : '\(.*\).apm')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # ARJ archives
    *.arj)
      a_dir=$(expr "$arg" : '\(.*\).arj')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # CHM archives
    *.chm)
      a_dir=$(expr "$arg" : '\(.*\).chm')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # CPIO archives
    *.cpio)
      a_dir=$(expr "$arg" : '\(.*\).cpio')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # CRAMFS files
    *.cramfs)
      a_dir=$(expr "$arg" : '\(.*\).cramfs')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # DEB packages
    *.deb)
      a_dir=$(expr "$arg" : '\(.*\).deb')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # DMG images
    *.dmg)
      a_dir=$(expr "$arg" : '\(.*\).dmg')
      7z x "$arg" -o"$a_dir"
      local code=$?
      ;;
    # FAT filesystem images
    *.fat)
      a_dir=$(expr "$arg" : '\(.*\).fat')
